{"componentChunkName":"component---src-components-doc-page-js","path":"/docs/0.4.x/getting-started/creating-a-project","webpackCompilationHash":"","result":{"data":{"file":{"children":[{"__typename":"MarkdownRemark","html":"<h1>Creating a Project</h1>\n<p>To use Rojo, you'll need to create a new project file, which tells Rojo what your project is, and how to load it into Roblox Studio.</p>\n<h2>New Project</h2>\n<p>Create a new folder, then run <code class=\"language-text\">rojo init</code> inside that folder to initialize an empty project.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">mkdir my-new-project\ncd my-new-project\n\nrojo init</code></pre></div>\n<p>Rojo will create an empty project file named <code class=\"language-text\">rojo.json</code> in the directory.</p>\n<p>The default configuration doesn't do anything. We need to tell Rojo where our code is on the filesystem, and where we want to put it in the Roblox tree.</p>\n<p>To do that, open up <code class=\"language-text\">rojo.json</code> and add an entry to the <code class=\"language-text\">partitions</code> table:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"your-project-name-here\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"servePort\"</span><span class=\"token operator\">:</span> <span class=\"token number\">8000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"partitions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"src\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ReplicatedStorage.Project\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>!!! warning\nMake sure that the <code class=\"language-text\">src</code> directory exists in your project, or Rojo will throw an error!</p>\n<p>!!! warning\nAny objects contained in the <code class=\"language-text\">target</code> of a partition will be destroyed by Rojo if not found on the filesystem!</p>\n<p>A Rojo project has one or more <em>partitions</em>. Partitions define how code should be transferred between the filesystem and Roblox by mapping directories and files to Roblox objects.</p>\n<p>Each partition has:</p>\n<ul>\n<li>A name (the key in the <code class=\"language-text\">partitions</code> object), which is used for debugging</li>\n<li><code class=\"language-text\">path</code>, the location on the filesystem relative to <code class=\"language-text\">rojo.json</code></li>\n<li><code class=\"language-text\">target</code>, the location in Roblox relative to <code class=\"language-text\">game</code></li>\n</ul>\n<h2>Syncing into Studio</h2>\n<p>Once you've added your partition to the project file, you can start the Rojo dev server by running a command in your project's directory:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">rojo serve</code></pre></div>\n<p>If your project is in the right place, Rojo will let you know that it was found and start an HTTP server that the plugin can connect to.</p>\n<p>In Roblox Studio, open the plugins tab and find Rojo's buttons.</p>\n<p><img src=\"/images/plugin-buttons.png\" alt=\"Location of Rojo&#x27;s plugin buttons in Roblox Studio\">\n{: align=\"center\" }</p>\n<p>Press <strong>Test Connection</strong> to verify that the plugin can communicate with the dev server. Watch the Output panel for the results.</p>\n<p>!!! info\nIf you see an error message, return to the previous steps and make sure that the Rojo dev server is running.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">![Rojo error in Roblox Studio Output](/images/connection-error.png)\n{: align=&quot;center&quot; }</code></pre></div>\n<p>After your connection was successful, press <strong>Sync In</strong> to move code from the filesystem into Studio, or use <strong>Toggle Polling</strong> to have Rojo automatically sync in changes as they happen.</p>\n<h2>Importing an Existing Project</h2>\n<p>Rojo will eventually support importing an existing Roblox project onto the filesystem for use with Rojo.</p>\n<p>Rojo doesn't currently support converting an existing project or syncing files from Roblox Studio onto the filesystem. In the mean time, you can manually copy your files into the structure that Rojo expects.</p>\n<p>Up-to-date information will be available on <a href=\"https://github.com/LPGhatguy/rojo/issues/5\">issue #5</a> as this is worked on.</p>"}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"contentPath":"0.4.x/getting-started/creating-a-project.md","title":"Creating a Project"}}}