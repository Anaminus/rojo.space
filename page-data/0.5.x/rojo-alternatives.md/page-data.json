{"componentChunkName":"component---src-components-doc-page-js","path":"/0.5.x/rojo-alternatives.md","webpackCompilationHash":"","result":{"data":{"file":{"children":[{"__typename":"MarkdownRemark","html":"<p>There are a number of existing plugins for Roblox that move code from the filesystem into Roblox.</p>\n<p>Besides Rojo, you might consider:</p>\n<ul>\n<li><a href=\"https://github.com/anaminus/rbxmk\">rbxmk by Anaminus</a></li>\n<li><a href=\"https://github.com/osyrisrblx/rofresh\">Rofresh by Osyris</a></li>\n<li><a href=\"https://github.com/osyrisrblx/RbxRefresh\">RbxRefresh by Osyris</a></li>\n<li><a href=\"https://github.com/vocksel/studio-bridge\">Studio Bridge by Vocksel</a></li>\n<li><a href=\"https://github.com/vocksel/elixir\">Elixir by Vocksel</a></li>\n<li><a href=\"https://github.com/evaera/RbxSync\">RbxSync by evaera</a></li>\n<li><a href=\"https://github.com/MemoryPenguin/CodeSync\">CodeSync by MemoryPenguin</a></li>\n<li><a href=\"https://github.com/MemoryPenguin/rbx-exteditor\">rbx-exteditor by MemoryPenguin</a></li>\n</ul>\n<p>So why did I build Rojo?</p>\n<p>Each of these tools solves what is essentially the same problem from a few different angles. The goal of Rojo is to take all of the lessons and ideas learned from these projects and build a tool that can solve this problem for good.</p>\n<p>Additionally:</p>\n<ul>\n<li>I think that this tool needs to be built in a compiled language without a runtime, for easy distribution and good performance.</li>\n<li>I think that the conventions promoted by other sync plugins (<code class=\"language-text\">.module.lua</code> for modules, as well a single sync point) are sub-optimal.</li>\n<li>I think that I have a good enough understanding of the problem to build something robust.</li>\n<li>I think that Rojo should be able to do more than just sync code.</li>\n</ul>"}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"sourcePath":"0.5.x/rojo-alternatives.md","title":"Rojo Alternatives"}}}